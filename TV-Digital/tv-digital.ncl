<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- Generated by NCL Eclipse -->
<ncl id="tv-digital" xmlns="http://www.ncl.org.br/NCL3.0/EDTVProfile">
	<head>
		<ruleBase>
			<rule id="en" var="system.language" comparator="eq" value="en"/>
		</ruleBase>
		
		<regionBase>
			<region id="main" height="100%" width="100%">
				<region id="rgInte" right="5%" top="2%" width="5%" height="5%" zIndex="3"/>
				<region id="rgClima" top="8%" right="1%" width="12%" height="50%" zIndex="3"/>
				<region id="rgVideo" width="100%" height="100%" zIndex="1">
					<region id="rLogo" top="4%" left="39%" width="20%" height="10%" zIndex="2"/>
					<region id="rMenu" top="15%" left="40%" width="55%" height="70%" zIndex="2"/>
						
				</region>
				<region id="rgLegends" bottom="2%" left="5%" right="5%" width="90%" height="5%" zIndex="2"/>
				<region id="rgButtonBlue" bottom="3%" right="27%" width="3%" height="4%" zIndex="3"/>
				<region id="rgButtonRed" bottom="3%" right="42%" width="3%" height="4%" zIndex="3"/>
				<region id="rgButtonYellow" bottom="3%" right="57%" width="3%" height="4%" zIndex="3"/>
				<region id="rLavid" width="100%" height="100%" zIndex="0"/>
			</region>
		</regionBase>
		<descriptorBase>
			<!--Descriptor define onde o objeto deve ser apresentado-->
			<descriptor id="descVideo" region="rgVideo" />
			<descriptor id="descInte" region="rgInte"/>
			<descriptor id="descClima" region="rgClima">
				<descriptorParam name="fontColor" value="white"/>
				<descriptorParam name="fontFamily" value="sans-serif"/>
				<descriptorParam name="fontSize" value="15"/>
			</descriptor>
			<descriptor id="descLegends" region="rgLegends">
				<descriptorParam name="fontColor" value="yellow"/>
				<descriptorParam name="fontFamily" value="sans-serif"/>
				<descriptorParam name="fontSize" value="20"/>
			</descriptor>
			<descriptor id="buttonBlue" region="rgButtonBlue"/>
			<descriptor id="buttonRed" region="rgButtonRed"/>
			<descriptor id="buttonYellow" region="rgButtonYellow"/>
			<descriptor id="backLavid" region="rLavid"/>
			<descriptor id="descLogo" region="rLogo"/>
			<descriptor id="descMenu" region="rMenu" focusIndex="1"/>
		</descriptorBase>
		<connectorBase>
			
			<!--		Icon prevision time		-->
			<causalConnector id="onBegin">
				<connectorParam name="delay"/>
				<simpleCondition role="onBegin"/>
				<compoundAction operator="seq">
					<simpleAction role="start" delay="$delay" max="unbounded"/>
					<simpleAction role="stop"/>
				</compoundAction>
			</causalConnector>
			
			<causalConnector id="onBeginLegend">
				<connectorParam name="delay"/>
				<simpleCondition role="onBegin" />
				<compoundAction operator="seq">
					<simpleAction role="start"/>
					<simpleAction role="stop" delay="$delay" max="unbounded"/>
				</compoundAction>
			</causalConnector>
			<causalConnector id="onRestartVideo">
				<simpleCondition role="onEnd"/>
				<simpleAction role="start" max="unbounded"/>
			</causalConnector>
			
			<!--		Menu		-->
			<causalConnector id="onKeySelectBlue">
				<connectorParam name="keyCode"/>
				<connectorParam name="var"/>
				<simpleCondition role="onSelection" key="$keyCode"/>
				<compoundAction operator="seq">
					<simpleAction role="set" value="$var"/>
					<simpleAction role="start"/>
				</compoundAction>
			</causalConnector>
			
			<causalConnector id="onKeySelectRed">
				<connectorParam name="keyCode"/>
				<connectorParam name="var"/>
				<simpleCondition role="onSelection" key="$keyCode"/>
				<compoundAction operator="seq">
					<simpleAction role="set" value="$var"/>
					<simpleAction role="stop"/>
				</compoundAction>
			</causalConnector>
			
			<causalConnector id="onBeginLogo">
				<simpleCondition role="onBegin"/>
				<simpleAction role="start"/>
			</causalConnector>
			<causalConnector id="onEndLogo">
				<simpleCondition role="onEnd"/>
				<simpleAction role="stop"/>
			</causalConnector>
		</connectorBase>
	</head>
	<!--
Escreva uma aplicação que inicia a visualização de um vídeo 
(vídeo principal de sua escolha) e um ícone interativo. Depois de 5 
segundos do início do vídeo (Cena 1), a aplicação deve remover o ícone 
interativo e exibir a temperatura de João Pessoa (Cena 2). Aos 15 segundos,
você deve modificar a aplicação e exibir a temperatura de Campina Grande 
(Cena 3). Aos 20 segundos, você deve exibir a temperatura de Souza (Cena 4). Por fim, 
aos 25 segundos, você deve voltar ao ícone de interatividade.
-->
	<body>
		<port id="pLavid" component="bLavid"/>
		<port id="pVideo" component="video"/>
		<port id="pInte" component="inteIcon"/>
		<port id="pLegends" component="legends"/>
		<port id="pBlue" component="blueButton"/>
		<port id="pRed" component="redButton"/>
		<port id="pYellow" component="yellowButton"/>
		<media id="video" src="media/cidMoreira.mp4" descriptor="descVideo" type="video/mp4">
			<property name="bounds"/>
		</media>
			
		<media id="inteIcon" src="media/interativo.png" descriptor="descInte" type="image/png"/>
		<media id="sunIcon" src="media/sun.png" descriptor="descInte" type="image/png"/>
		<media id="cloudIcon" src="media/cloud.png" descriptor="descInte" type="image/png"/>
		<media id="snowIcon" src="media/snow.png" descriptor="descInte" type="image/png"/>
		<media id="legends" src="media/legenda.txt" descriptor="descLegends" type="text/plain"/>
		<media id="jampa" src="media/jampa.txt" descriptor="descClima" type="text/plain"/>
		<media id="campina" src="media/campina.txt" descriptor="descClima" type="text/plain"/>
		<media id="souza" src="media/souza.txt" descriptor="descClima" type="text/plain"/>
		<media id="blueButton" src="media/blue1.png" descriptor="buttonBlue" type="image/png"/>
		<media id="redButton" src="media/red1.png" descriptor="buttonRed" type="image/png"/>
		<media id="yellowButton" src="media/yellow.png" descriptor="buttonYellow" type="image/png"/>
		<media id="bLavid" src="media/background2.jpg" descriptor="backLavid" type="image/jpeg"/>		
		<context id="contexMenu">
			<port id="pMenuImage" component="menuImage"/>
			<port id="pMenuLogo" component="menuLogo"/>

			<media id="reusedVideo" refer="video" instance="instSame">
				<property name="bounds"/>
			</media>
			<media id="reusedBlueButton" refer="blueButton" instance="instSame"/>
			<media id="reusedRedButton" refer="redButton" instance="instSame"/>
			<media id="menuImage" src="media/menuBack2.jpg" descriptor="descMenu" type="image/jpeg"/>
			<media id="menuLogo" src="media/lavidLogo2.png" descriptor="descLogo" type="image/png"/>
			
			<!--		Menu 		-->
		
			<link xconnector="onKeySelectBlue">
				<bind role="onSelection" component="reusedBlueButton">
					<bindParam name="keyCode" value="BLUE"/>
				</bind>
				<bind role="set" component="reusedVideo" interface="bounds">
					<bindParam name="var" value="5%, 6.67%, 30%, 30%"/>
				</bind>
				<bind role="start" component="menuImage"/>
			</link>
			<link xconnector="onKeySelectRed">
				<bind role="onSelection" component="reusedRedButton">
					<bindParam name="keyCode" value="RED"/>
				</bind>
				<bind role="set" component="reusedVideo" interface="bounds">
					<bindParam name="var" value="0,0,400%,400%"/>
				</bind>
				<bind role="stop" component="menuImage"/>			
			</link>
			<link xconnector="onBeginLogo">
				<bind role="onBegin" component="menuImage"/>
				<bind role="start" component="menuLogo"/>
			</link>
			<link xconnector="onEndLogo">
				<bind role="onEnd" component="menuImage"/>
				<bind role="stop" component="menuLogo"/>
			</link>
		</context>
		
		<!-- 		Icon Interativo		-->
		
		<link xconnector="onBegin">
			<bind role="onBegin" component="inteIcon"/>
			<bind role="start" component="sunIcon">
				<bindParam name="delay" value="5s"/>
			</bind>
			<bind role="stop" component="inteIcon"/>
		</link>
		<link xconnector="onBegin">
			<bind role="onBegin" component="sunIcon"/>
			<bind role="start" component="cloudIcon">
				<bindParam name="delay" value="5s"/>
			</bind>
			<bind role="stop" component="sunIcon"/>
		</link>
		<link xconnector="onBegin">
			<bind role="onBegin" component="cloudIcon"/>
			<bind role="start" component="snowIcon">
				<bindParam name="delay" value="5s"/>
			</bind>
			<bind role="stop" component="cloudIcon"/>
		</link>
		<link xconnector="onBegin">
			<bind role="onBegin" component="snowIcon"/>
			<bind role="start" component="inteIcon">
				<bindParam name="delay" value="5s"/>
			</bind>
			<bind role="stop" component="snowIcon"/>
		</link>
		<!--		Legends Time 		-->
		
		<link xconnector="onBeginLegend">
			<bind role="onBegin" component="sunIcon"/>
			<bind role="start" component="jampa"/>
			<bind role="stop" component="jampa">
				<bindParam name="delay" value="5s"/>
			</bind>
		</link>
		<link xconnector="onBeginLegend">
			<bind role="onBegin" component="cloudIcon"/>
			<bind role="start" component="campina"/>
			<bind role="stop" component="campina">
				<bindParam name="delay" value="5s"/>
			</bind>
		</link>		
		<link xconnector="onBeginLegend">
			<bind role="onBegin" component="snowIcon"/>
			<bind role="start" component="souza"/>
			<bind role="stop" component="souza">
				<bindParam name="delay" value="5s"/>
			</bind>
		</link>
		
		<link xconnector="onRestartVideo">
			<bind role="onEnd" component="video"/>
			<bind role="start" component="video"/>
		</link>
	</body>
</ncl>
